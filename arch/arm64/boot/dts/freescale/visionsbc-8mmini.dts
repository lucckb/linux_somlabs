// SPDX-License-Identifier: GPL-2.0-or-later
/*
 * Copyright 2020 SomLabs
 *
 */

/dts-v1/;

#include <dt-bindings/phy/phy-imx8-pcie.h>
#include "imx8mm.dtsi"

/ {
    model = "SoMLabs VisionSBC-MX8MMini";
    compatible = "somlabs,visionsom-8mmini", "fsl,imx8mm";

    reserved-memory {
        #address-cells = <2>;
        #size-cells = <2>;
        ranges;

        rpmsg_reserved: rpmsg@0xb8000000 {
            no-map;
            reg = <0 0xb8000000 0 0x400000>;
        };
    };

    chosen {
        bootargs = "console=ttymxc3,115200 earlycon=ec_imx6q,0x30a60000,115200";
        stdout-path = &uart4;
    };

    leds {      /* dedicated led for system status */
        compatible = "gpio-leds";
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_gpio_led>;

        status {
            label = "status";
            gpios = <&gpio2 2 0>;
            linux,default-trigger = "heartbeat";
        };
    };

    sound {
        /* generic sound card */
        compatible = "simple-audio-card";
        simple-audio-card,name = "nau8822";

        simple-audio-card,widgets =
                "Headphones", "Headphones",
                "Line Out", "Line Out",
                "Speaker", "Speaker",
                "Microphone", "Mic In";
        simple-audio-card,routing =
                "Headphones", "LHP",
                "Headphones", "RHP",
                "Speaker", "LSPK",
                "Speaker", "RSPK",
                "Line Out", "AUXOUT1",
                "Line Out", "AUXOUT2",
                "LMICP",    "Mic In",
                "RMICP",    "Mic In";

        simple-audio-card,format = "i2s";
        simple-audio-card,bitclock-master = <&dailink_master>;
        simple-audio-card,frame-master = <&dailink_master>;

        simple-audio-card,cpu {
            sound-dai = <&sai3>;
        };

        dailink_master: simple-audio-card,codec {
            sound-dai = <&codec_nau8822>;
            clocks = <&clk IMX8MM_CLK_SAI3_ROOT>;
        };
    };

    sound-hdmi {
        compatible = "fsl,imx-audio-spdif";
        model = "imx-spdif";
        spdif-controller = <&spdif1>;
        spdif-out;
        port {
            spdif_audio_out: endpoint {
                remote-endpoint = <&lt8912_audio_in>;
            };
        };
    };

    hdmi {
        compatible = "hdmi-connector";
        type = "a";

        port {
            hdmi_connector_in: endpoint {
                remote-endpoint = <&lt8912_hdmi_out>;
            };
        };
    };

    reg_usb_otg1_vbus: regulator@2 {
        compatible = "regulator-fixed";
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_usb_otg1>;
        regulator-name = "usb_otg1_vbus";
        regulator-min-microvolt = <5000000>;
        regulator-max-microvolt = <5000000>;
        gpio = <&gpio1 12 GPIO_ACTIVE_HIGH>;
        enable-active-high;
    };

    reg_usb_otg2_vbus: regulator@3 {
        compatible = "regulator-fixed";
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_usb_otg2_hubrst>;
        regulator-name = "usb_otg2_vbus";
        regulator-min-microvolt = <5000000>;
        regulator-max-microvolt = <5000000>;
        gpio = <&gpio4 28 GPIO_ACTIVE_HIGH>;
        enable-active-high;
    };

    panel: panel {
        compatible = "panel-lvds";
        status = "disabled";

        height-mm = <136>;
        width-mm = <217>;

        data-mapping = "vesa-24";

        panel-timing {
            clock-frequency = <75000000>;
            hactive = <1280>;
            vactive = <800>;
            hback-porch = <40>;
            hfront-porch = <40>;
            hsync-len = <48>;
            vback-porch = <29>;
            vfront-porch = <13>;
            vsync-len = <3>;
        };

        port {
            lvds_panel_in: endpoint {
                remote-endpoint = <&lt8912_lvds_out>;
            };
        };
    };
};

&{/reserved-memory/linux,cma} {
    alloc-ranges = <0 0x40000000 0 0x60000000>;
};

&i2c1 {
    clock-frequency = <400000>;
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_i2c1>;
    status = "okay";

    codec_nau8822: nau8822@1a {
        compatible = "nuvoton,nau8822";
        reg = <0x1a>;
        #sound-dai-cells = <0>;
    };

    pcf85263@51 {
        compatible = "nxp,pcf85263";
        reg = <0x51>;
    };

    ov5640_mipi: ov5640_mipi@3c {
        compatible = "ovti,ov5640_mipi";
        reg = <0x3c>;
        status = "okay";
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_csi>;
        clocks = <&clk IMX8MM_CLK_CLKO1>;
        clock-names = "csi_mclk";
        assigned-clocks = <&clk IMX8MM_CLK_CLKO1>;
        assigned-clock-parents = <&clk IMX8MM_CLK_24M>;
        assigned-clock-rates = <24000000>;
        csi_id = <0>;
        pwn-gpios = <&gpio2 1 GPIO_ACTIVE_HIGH>;
        rst-gpios = <&gpio2 0 GPIO_ACTIVE_LOW>;
        mclk = <24000000>;
        port {
            ov5640_mipi1_ep: endpoint {
                remote-endpoint = <&mipi1_sensor_ep>;
            };
        };
    };
};

&i2c2 {
    clock-frequency = <400000>;
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_i2c2>;
    pinctrl-1 = <&pinctrl_i2c2_gpio>;
    scl-gpios = <&gpio5 16 GPIO_ACTIVE_HIGH>;
    sda-gpios = <&gpio5 17 GPIO_ACTIVE_HIGH>;
    status = "okay";

    pmic: pca9450@25 {
        reg = <0x25>;
        compatible = "nxp,pca9450a";
        /* PMIC PCA9450 PMIC_nINT GPIO1_IO1 */
        pinctrl-0 = <&pinctrl_pmic>;
        pinctrl-names = "default";
        interrupt-parent = <&gpio1>;
        interrupts = <1 IRQ_TYPE_LEVEL_LOW>;

        regulators {
            buck1_reg: BUCK1 {
                regulator-name = "BUCK1";
                regulator-min-microvolt = <600000>;
                regulator-max-microvolt = <2187500>;
                regulator-boot-on;
                regulator-always-on;
                regulator-ramp-delay = <3125>;
                nxp,dvs-run-voltage = <850000>;
                nxp,dvs-standby-voltage = <800000>;
            };

            buck2_reg: BUCK2 {
                regulator-name = "BUCK2";
                regulator-min-microvolt = <600000>;
                regulator-max-microvolt = <2187500>;
                regulator-boot-on;
                regulator-always-on;
                regulator-ramp-delay = <3125>;
            };

            buck3_reg: BUCK3 {
                regulator-name = "BUCK3";
                regulator-min-microvolt = <600000>;
                regulator-max-microvolt = <2187500>;
                regulator-boot-on;
                regulator-always-on;
            };

            buck4_reg: BUCK4 {
                regulator-name = "BUCK4";
                regulator-min-microvolt = <600000>;
                regulator-max-microvolt = <3400000>;
                regulator-boot-on;
                regulator-always-on;
            };

            buck5_reg: BUCK5 {
                regulator-name = "BUCK5";
                regulator-min-microvolt = <600000>;
                regulator-max-microvolt = <3400000>;
                regulator-boot-on;
                regulator-always-on;
            };

            buck6_reg: BUCK6 {
                regulator-name = "BUCK6";
                regulator-min-microvolt = <600000>;
                regulator-max-microvolt = <3400000>;
                regulator-boot-on;
                regulator-always-on;
            };

            ldo1_reg: LDO1 {
                regulator-name = "LDO1";
                regulator-min-microvolt = <1600000>;
                regulator-max-microvolt = <3300000>;
                regulator-boot-on;
                regulator-always-on;
            };

            ldo2_reg: LDO2 {
                regulator-name = "LDO2";
                regulator-min-microvolt = <800000>;
                regulator-max-microvolt = <1150000>;
                regulator-boot-on;
                regulator-always-on;
            };

            ldo3_reg: LDO3 {
                regulator-name = "LDO3";
                regulator-min-microvolt = <800000>;
                regulator-max-microvolt = <3300000>;
                regulator-boot-on;
                regulator-always-on;
            };

            ldo4_reg: LDO4 {
                regulator-name = "LDO4";
                regulator-min-microvolt = <800000>;
                regulator-max-microvolt = <3300000>;
                regulator-boot-on;
                regulator-always-on;
            };

            ldo5_reg: LDO5 {
                regulator-name = "LDO5";
                regulator-min-microvolt = <1800000>;
                regulator-max-microvolt = <3300000>;
            };
        };
    };

    /* MIPI-DSI to HDMI/LVDS adapter */
    mipi_dsi_hdmi: lt8912@48 {
        compatible = "lontium,lt8912";
        reg = <0x48>;
        ddc-i2c-bus = <&i2c1>;
        status = "okay";
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_mipi2hdmi>;
        hpd-gpios = <&gpio1 6 GPIO_ACTIVE_HIGH>;
        interrupt-gpios = <&gpio1 7 GPIO_ACTIVE_LOW>;
        reset-gpios = <&gpio1 9 GPIO_ACTIVE_LOW>;
	audio-spdif;

        ports {
            #address-cells = <1>;
            #size-cells = <0>;
            port@0 {
                reg = <0>;
                lt8912_in: endpoint {
                    remote-endpoint = <&mipi_dsi_out>;
                };
            };
            port@1 {
                reg = <1>;
                lt8912_hdmi_out: endpoint {
                    remote-endpoint = <&hdmi_connector_in>;
                };
            };

            port@2 {
                reg = <2>;
                lt8912_lvds_out: endpoint {
                    remote-endpoint = <&lvds_panel_in>;
                };
            };

            port@3 {
                reg = <3>;
                lt8912_audio_in: endpoint {
                    remote-endpoint = <&spdif_audio_out>;
                };
            };
        };
    };

};

&lcdif {
    status = "okay";
};

&mipi_dsi {
    status = "okay";

    port@1 {
        mipi_dsi_out: endpoint {
            remote-endpoint = <&lt8912_in>;
            attach-bridge;
        };
    };
};

&sai3 {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_sai3>;
    clocks = <&clk IMX8MM_CLK_SAI3_IPG>, <&clk IMX8MM_CLK_DUMMY>,
        <&clk IMX8MM_CLK_SAI1_ROOT>, <&clk IMX8MM_CLK_DUMMY>,
        <&clk IMX8MM_CLK_DUMMY>, <&clk IMX8MM_AUDIO_PLL1_OUT>,
        <&clk IMX8MM_AUDIO_PLL2_OUT>;
    clock-names = "bus", "mclk0", "mclk1", "mclk2", "mclk3", "pll8k", "pll11k";
    assigned-clocks = <&clk IMX8MM_CLK_SAI3>;
    assigned-clock-parents = <&clk IMX8MM_AUDIO_PLL1_OUT>;
    assigned-clock-rates = <12288000>;
    status = "okay";
};

&fec1 {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_fec1>;
    phy-mode = "rgmii-id";
    phy-handle = <&ethphy1>;
    phy-reset-gpios = <&gpio4 14 GPIO_ACTIVE_LOW>; /* GPIO4_14 */
    phy-reset-duration = <10>;
    phy-reset-post-delay = <50>;
    phy-int-gpios = <&gpio5 6 GPIO_ACTIVE_LOW>; /* GPIO5_6 */
    fsl,magic-packet;
    status = "okay";

    mdio {
        #address-cells = <1>;
        #size-cells = <0>;

        ethphy1: ethernet-phy@1 {
            compatible = "ethernet-phy-ieee802.3-c22";
            reg = <1>;
        };
    };
};

&spdif1 {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_spdif1>;
    assigned-clocks = <&clk IMX8MM_CLK_SPDIF1>;
    assigned-clock-parents = <&clk IMX8MM_AUDIO_PLL1_OUT>;
    assigned-clock-rates = <24576000>;
    clocks = <&clk IMX8MM_CLK_AUDIO_AHB>, <&clk IMX8MM_CLK_24M>,
        <&clk IMX8MM_CLK_SPDIF1>, <&clk IMX8MM_CLK_DUMMY>,
        <&clk IMX8MM_CLK_DUMMY>, <&clk IMX8MM_CLK_DUMMY>,
        <&clk IMX8MM_CLK_AUDIO_AHB>, <&clk IMX8MM_CLK_DUMMY>,
        <&clk IMX8MM_CLK_DUMMY>, <&clk IMX8MM_CLK_DUMMY>,
        <&clk IMX8MM_AUDIO_PLL1_OUT>, <&clk IMX8MM_AUDIO_PLL2_OUT>;
    clock-names = "core", "rxtx0", "rxtx1", "rxtx2", "rxtx3",
        "rxtx4", "rxtx5", "rxtx6", "rxtx7", "spba", "pll8k", "pll11k";
    status = "okay";
};

&mu {
    status = "okay";
};

&uart4 { /* console */
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_uart4>;
    status = "okay";
};

&uart3 {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_uart3>;
    rts-gpios = <&gpio4 16 GPIO_ACTIVE_LOW>;
    linux,rs485-enabled-at-boot-time;
    status = "okay";
};

&usdhc2 {           /* uSD card interface */
    #address-cells = <1>;
    #size-cells = <0>;
    pinctrl-names = "default", "state_100mhz", "state_200mhz";
    pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_cd>;
    pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_cd>;
    pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_cd>;
    cd-gpios = <&gpio2 12 GPIO_ACTIVE_HIGH>;
    no-1-8-v;           //todo: PMIC allows to control SD card voltage, add support for this in software/dts
    bus-width = <4>;
    status = "okay";
};

/*
 *  Internal eMMC
 */
&usdhc3 {
    pinctrl-names = "default", "state_100mhz", "state_200mhz";
    pinctrl-0 = <&pinctrl_usdhc3>;
    pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
    pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
    bus-width = <8>;
    non-removable;
    status = "okay";
};

&flexspi {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_flexspi0>;
    status = "okay";

    flash0: w25q128fwpig@0 {
        reg = <0>;
        #address-cells = <1>;
        #size-cells = <1>;
        compatible = "jedec,spi-nor";
        spi-max-frequency = <80000000>;
        spi-tx-bus-width = <4>;
        spi-rx-bus-width = <4>;
    };
};

&usbotg1 {
    dr_mode = "otg";
    vbus-supply = <&reg_usb_otg1_vbus>;
    picophy,pre-emp-curr-control = <3>;
    picophy,dc-vol-level-adjust = <7>;
    status = "okay";
};

&usbotg2 {
    dr_mode = "host";
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_usb_otg2>;
    over-current-active-low;
    power-active-high;
    vbus-supply = <&reg_usb_otg2_vbus>;
    picophy,pre-emp-curr-control = <3>;
    picophy,dc-vol-level-adjust = <7>;
    status = "okay";
};

&wdog1 {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_wdog>;
    fsl,ext-reset-output;
    status = "okay";
};

&A53_0 {
    cpu-supply = <&buck2_reg>;
};

&A53_1 {
    cpu-supply = <&buck2_reg>;
};

&A53_2 {
    cpu-supply = <&buck2_reg>;
};

&A53_3 {
    cpu-supply = <&buck2_reg>;
};

&gpu {
    status = "okay";
};

&vpu_g1 {
    status = "okay";
};

&vpu_g2 {
    status = "okay";
};

&vpu_h1 {
    status = "okay";
};

&pcie_phy {
    status = "okay";
    clocks = <&clk IMX8MM_CLK_PCIE1_PHY>;
    fsl,clkreq-unsupported;
    fsl,refclk-pad-mode = <IMX8_PCIE_REFCLK_PAD_OUTPUT>;
    fsl,tx-deemph-gen1 = <0x2d>;
    fsl,tx-deemph-gen2 = <0xf>;
};

&pcie0{
    clocks = <&clk IMX8MM_CLK_PCIE1_ROOT>,
         <&clk IMX8MM_CLK_PCIE1_AUX>,
         <&clk IMX8MM_CLK_PCIE1_PHY>;
    clock-names = "pcie", "pcie_aux", "pcie_bus";
    assigned-clocks = <&clk IMX8MM_CLK_PCIE1_AUX>,
                      <&clk IMX8MM_CLK_PCIE1_CTRL>;
    assigned-clock-rates = <10000000>, <250000000>;
    assigned-clock-parents = <&clk IMX8MM_SYS_PLL2_50M>,
                             <&clk IMX8MM_SYS_PLL2_250M>;
    ext_osc = <0>;
    status = "okay";
};

&csi1_bridge {
	fsl,mipi-mode;
	status = "okay";
	port {
		csi1_ep: endpoint {
			remote-endpoint = <&csi1_mipi_ep>;
		};
	};
};

&mipi_csi_1 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
	port {
		mipi1_sensor_ep: endpoint@1 {
			remote-endpoint = <&ov5640_mipi1_ep>;
			data-lanes = <2>;
			csis-hs-settle = <13>;
			csis-clk-settle = <2>;
			csis-wclk;
            swap-clk;
            swap-data;
		};

		csi1_mipi_ep: endpoint@2 {
			remote-endpoint = <&csi1_ep>;
		};
	};
};


&iomuxc {

    pinctrl_gpio_led: gpioledgrp {          /* dedicated sys-led output */
        fsl,pins = <
            MX8MM_IOMUXC_SD1_DATA0_GPIO2_IO2            0x19
        >;
    };

    pinctrl_i2c1: i2c1grp {             /* internal I2C bus - 3V3 domain */
        fsl,pins = <

            MX8MM_IOMUXC_I2C1_SCL_I2C1_SCL              0x400000c3
            MX8MM_IOMUXC_I2C1_SDA_I2C1_SDA              0x400000c3
        >;
    };

    pinctrl_i2c1_gpio: i2c1grp-gpio {
        fsl,pins = <
            MX8MM_IOMUXC_I2C1_SCL_GPIO5_IO14            0xc3
            MX8MM_IOMUXC_I2C1_SDA_GPIO5_IO15            0xc3
        >;
    };

    pinctrl_i2c2: i2c2grp {                 /* I2C for 1V8 domain */
        fsl,pins = <
            MX8MM_IOMUXC_I2C2_SCL_I2C2_SCL             0x400000c3
            MX8MM_IOMUXC_I2C2_SDA_I2C2_SDA             0x400000c3
        >;
    };

    pinctrl_i2c2_gpio: i2c2grp-gpio {
        fsl,pins = <
            MX8MM_IOMUXC_I2C2_SCL_GPIO5_IO16           0x0c3
            MX8MM_IOMUXC_I2C2_SDA_GPIO5_IO17           0x0c3
        >;
    };

    pinctrl_i2c3: i2c3grp {
        fsl,pins = <
            MX8MM_IOMUXC_I2C3_SCL_I2C3_SCL			    0xc3
            MX8MM_IOMUXC_I2C3_SDA_I2C3_SDA			    0xc3
        >;
    };

    pinctrl_i2c3_gpio: i2c3grp-gpio {
        fsl,pins = <
            MX8MM_IOMUXC_I2C3_SCL_GPIO5_IO18       		0xc3
            MX8MM_IOMUXC_I2C3_SDA_GPIO5_IO19        	0xc3
        >;
    };

    pinctrl_i2c4: i2c4grp {
        fsl,pins = <
            MX8MM_IOMUXC_I2C4_SCL_I2C4_SCL			    0xc3
            MX8MM_IOMUXC_I2C4_SDA_I2C4_SDA			    0xc3
        >;
    };

    pinctrl_i2c4_gpio: i2c4grp-gpio {
        fsl,pins = <
            MX8MM_IOMUXC_I2C4_SCL_GPIO5_IO20       		0xc3
            MX8MM_IOMUXC_I2C4_SDA_GPIO5_IO21        	0xc3
        >;
    };

    pinctrl_pmic: pmicirq {                 /* PMIC interrupt */
        fsl,pins = <
            MX8MM_IOMUXC_GPIO1_IO01_GPIO1_IO1           0x141
        >;
    };

    pinctrl_uart4: uart4grp {               /* serial console */
        fsl,pins = <
            MX8MM_IOMUXC_UART4_RXD_UART4_DCE_RX         0
            MX8MM_IOMUXC_UART4_TXD_UART4_DCE_TX         0
        >;
    };

    pinctrl_usdhc2_cd: usdhc2grpcd {        /* USDHC2 - card detect gpio */
        fsl,pins = <
            MX8MM_IOMUXC_SD2_CD_B_GPIO2_IO12            0x41
        >;
    };

    pinctrl_usdhc2: usdhc2grp {             /* USDHC2 - uSD card */
        fsl,pins = <
            MX8MM_IOMUXC_SD2_CLK_USDHC2_CLK             0x190
            MX8MM_IOMUXC_SD2_CMD_USDHC2_CMD             0x1d0
            MX8MM_IOMUXC_SD2_DATA0_USDHC2_DATA0         0x1d0
            MX8MM_IOMUXC_SD2_DATA1_USDHC2_DATA1         0x1d0
            MX8MM_IOMUXC_SD2_DATA2_USDHC2_DATA2         0x1d0
            MX8MM_IOMUXC_SD2_DATA3_USDHC2_DATA3         0x1d0
        >;
    };

    pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
        fsl,pins = <
            MX8MM_IOMUXC_SD2_CLK_USDHC2_CLK             0x194
            MX8MM_IOMUXC_SD2_CMD_USDHC2_CMD             0x1d4
            MX8MM_IOMUXC_SD2_DATA0_USDHC2_DATA0         0x1d4
            MX8MM_IOMUXC_SD2_DATA1_USDHC2_DATA1         0x1d4
            MX8MM_IOMUXC_SD2_DATA2_USDHC2_DATA2         0x1d4
            MX8MM_IOMUXC_SD2_DATA3_USDHC2_DATA3         0x1d4
        >;
    };

    pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
        fsl,pins = <
            MX8MM_IOMUXC_SD2_CLK_USDHC2_CLK             0x196
            MX8MM_IOMUXC_SD2_CMD_USDHC2_CMD             0x1d6
            MX8MM_IOMUXC_SD2_DATA0_USDHC2_DATA0         0x1d6
            MX8MM_IOMUXC_SD2_DATA1_USDHC2_DATA1         0x1d6
            MX8MM_IOMUXC_SD2_DATA2_USDHC2_DATA2         0x1d6
            MX8MM_IOMUXC_SD2_DATA3_USDHC2_DATA3         0x1d6
        >;
    };

    pinctrl_usdhc3: usdhc3grp {             /* USDHC3 - eMMC */
        fsl,pins = <
            MX8MM_IOMUXC_NAND_WE_B_USDHC3_CLK           0x190
            MX8MM_IOMUXC_NAND_WP_B_USDHC3_CMD           0x1d0
            MX8MM_IOMUXC_NAND_DATA04_USDHC3_DATA0       0x1d0
            MX8MM_IOMUXC_NAND_DATA05_USDHC3_DATA1       0x1d0
            MX8MM_IOMUXC_NAND_DATA06_USDHC3_DATA2       0x1d0
            MX8MM_IOMUXC_NAND_DATA07_USDHC3_DATA3       0x1d0
            MX8MM_IOMUXC_NAND_RE_B_USDHC3_DATA4         0x1d0
            MX8MM_IOMUXC_NAND_CE2_B_USDHC3_DATA5        0x1d0
            MX8MM_IOMUXC_NAND_CE3_B_USDHC3_DATA6        0x1d0
            MX8MM_IOMUXC_NAND_CLE_USDHC3_DATA7          0x1d0
            MX8MM_IOMUXC_NAND_CE1_B_USDHC3_STROBE       0x190

        >;
    };

    pinctrl_usdhc3_100mhz: usdhc3grp100mhz {
        fsl,pins = <
            MX8MM_IOMUXC_NAND_WE_B_USDHC3_CLK           0x194
            MX8MM_IOMUXC_NAND_WP_B_USDHC3_CMD           0x1d4
            MX8MM_IOMUXC_NAND_DATA04_USDHC3_DATA0       0x1d4
            MX8MM_IOMUXC_NAND_DATA05_USDHC3_DATA1       0x1d4
            MX8MM_IOMUXC_NAND_DATA06_USDHC3_DATA2       0x1d4
            MX8MM_IOMUXC_NAND_DATA07_USDHC3_DATA3       0x1d4
            MX8MM_IOMUXC_NAND_RE_B_USDHC3_DATA4         0x1d0
            MX8MM_IOMUXC_NAND_CE2_B_USDHC3_DATA5        0x1d0
            MX8MM_IOMUXC_NAND_CE3_B_USDHC3_DATA6        0x1d0
            MX8MM_IOMUXC_NAND_CLE_USDHC3_DATA7          0x1d0
            MX8MM_IOMUXC_NAND_CE1_B_USDHC3_STROBE       0x190
        >;
    };

    pinctrl_usdhc3_200mhz: usdhc3grp200mhz {
        fsl,pins = <
            MX8MM_IOMUXC_NAND_WE_B_USDHC3_CLK           0x196
            MX8MM_IOMUXC_NAND_WP_B_USDHC3_CMD           0x1d6
            MX8MM_IOMUXC_NAND_DATA04_USDHC3_DATA0       0x1d6
            MX8MM_IOMUXC_NAND_DATA05_USDHC3_DATA1       0x1d6
            MX8MM_IOMUXC_NAND_DATA06_USDHC3_DATA2       0x1d6
            MX8MM_IOMUXC_NAND_DATA07_USDHC3_DATA3       0x1d6
            MX8MM_IOMUXC_NAND_RE_B_USDHC3_DATA4         0x1d0
            MX8MM_IOMUXC_NAND_CE2_B_USDHC3_DATA5        0x1d0
            MX8MM_IOMUXC_NAND_CE3_B_USDHC3_DATA6        0x1d0
            MX8MM_IOMUXC_NAND_CLE_USDHC3_DATA7          0x1d0
            MX8MM_IOMUXC_NAND_CE1_B_USDHC3_STROBE       0x190
        >;
    };

    pinctrl_wdog: wdoggrp {
        fsl,pins = <
            MX8MM_IOMUXC_GPIO1_IO02_WDOG1_WDOG_B        0xc6
        >;
    };

    pinctrl_mipi2hdmi: mipi2hdmi {
        fsl,pins = <
            MX8MM_IOMUXC_GPIO1_IO07_GPIO1_IO7           0x81        /* interrupt */
            MX8MM_IOMUXC_GPIO1_IO09_GPIO1_IO9           0x19        /* reset */
            MX8MM_IOMUXC_GPIO1_IO06_GPIO1_IO6           0x81        /* HPD */
        >;
    };

    pinctrl_spdif1: spdif1grp {
        fsl,pins = <
            MX8MM_IOMUXC_SPDIF_TX_SPDIF1_OUT            0xd6
        >;
    };

    pinctrl_fec1: fec1grp {                       /* ethernet phy */
        fsl,pins = <
            MX8MM_IOMUXC_ENET_MDC_ENET1_MDC                 0x3
            MX8MM_IOMUXC_ENET_MDIO_ENET1_MDIO               0x3
            MX8MM_IOMUXC_ENET_TD3_ENET1_RGMII_TD3           0x1f
            MX8MM_IOMUXC_ENET_TD2_ENET1_RGMII_TD2           0x1f
            MX8MM_IOMUXC_ENET_TD1_ENET1_RGMII_TD1           0x1f
            MX8MM_IOMUXC_ENET_TD0_ENET1_RGMII_TD0           0x1f
            MX8MM_IOMUXC_ENET_RD3_ENET1_RGMII_RD3           0x91
            MX8MM_IOMUXC_ENET_RD2_ENET1_RGMII_RD2           0x91
            MX8MM_IOMUXC_ENET_RD1_ENET1_RGMII_RD1           0x91
            MX8MM_IOMUXC_ENET_RD0_ENET1_RGMII_RD0           0x91
            MX8MM_IOMUXC_ENET_TXC_ENET1_RGMII_TXC           0x1f
            MX8MM_IOMUXC_ENET_RXC_ENET1_RGMII_RXC           0x91
            MX8MM_IOMUXC_ENET_RX_CTL_ENET1_RGMII_RX_CTL     0x91
            MX8MM_IOMUXC_ENET_TX_CTL_ENET1_RGMII_TX_CTL     0x1f
            MX8MM_IOMUXC_SAI1_TXD2_GPIO4_IO14               0x19    /* phy reset */
            MX8MM_IOMUXC_ECSPI1_SCLK_GPIO5_IO6		        0x1c4   /* phy int */
        >;
    };

    pinctrl_flexspi0: flexspi0grp {
        fsl,pins = <
            MX8MM_IOMUXC_NAND_ALE_QSPI_A_SCLK           0x1c2
            MX8MM_IOMUXC_NAND_CE0_B_QSPI_A_SS0_B        0x82
            MX8MM_IOMUXC_NAND_DATA00_QSPI_A_DATA0       0x82
            MX8MM_IOMUXC_NAND_DATA01_QSPI_A_DATA1       0x82
            MX8MM_IOMUXC_NAND_DATA02_QSPI_A_DATA2       0x82
            MX8MM_IOMUXC_NAND_DATA03_QSPI_A_DATA3       0x82
        >;
    };

    pinctrl_sai3: sai3grp {
        fsl,pins = <
            MX8MM_IOMUXC_SAI3_MCLK_SAI3_MCLK            0x96
            MX8MM_IOMUXC_SAI3_TXFS_SAI3_TX_SYNC         0x96
            MX8MM_IOMUXC_SAI3_TXC_SAI3_TX_BCLK          0x96
            MX8MM_IOMUXC_SAI3_TXD_SAI3_TX_DATA0         0x96
            MX8MM_IOMUXC_SAI3_RXD_SAI3_RX_DATA0         0x96
            MX8MM_IOMUXC_SAI3_RXD_SAI3_RX_DATA0         0x96
        >;
    };

    pinctrl_usb_otg1: usbotg1 {
        fsl,pins = <
            MX8MM_IOMUXC_GPIO1_IO12_GPIO1_IO12          0x19
            MX8MM_IOMUXC_GPIO1_IO13_GPIO1_IO13          0x1c4   /* overcurrent */
        >;
    };

    pinctrl_usb_otg2: usbotg2 {
        fsl,pins = <
            MX8MM_IOMUXC_GPIO1_IO14_USB2_OTG_PWR        0x19
            MX8MM_IOMUXC_GPIO1_IO15_USB2_OTG_OC         0x1c4   /* overcurrent */
        >;
    };

    pinctrl_usb_otg2_hubrst: usbotg2hubrst {
        fsl,pins = <
            MX8MM_IOMUXC_SAI3_RXFS_GPIO4_IO28           0x19    /* USB hub reset */
        >;
    };

    pinctrl_uart3: uart3grp {                                   /* RS485 interface */
        fsl,pins = <
            MX8MM_IOMUXC_UART3_RXD_UART3_DCE_RX         0x0
            MX8MM_IOMUXC_UART3_TXD_UART3_DCE_TX         0x0
            MX8MM_IOMUXC_SAI1_TXD4_GPIO4_IO16           0x0
        >;
    };

	pinctrl_csi: csi_pwn_grp {
		fsl,pins = <
			MX8MM_IOMUXC_SD1_CLK_GPIO2_IO0		        0x19
			MX8MM_IOMUXC_SD1_CMD_GPIO2_IO1		        0x19
		>;
	};
};
